<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAK0AAAAwCAIAAADsNW2JAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAEIklEQVR4Xu2ZsU0sMRCGyWiE
        JohogogGaAGJFIkOaIAGKIAYUQA5OTkSCbr3eWfWMmPv6RbYW87v/4LTrme8e/j/Z+x372gjxGYjH4iE
        fCAS8oFIyAciIR+IhHwgEvKBSMgHIiEfiIR8IBLygUgcjA/e399fvvL29uYx8WP25ANkO6pg0MMToPTd
        3d3l5aVPaHF+fn57e2uPqt/S9Erzy5ycnGA1zyh4fHz0jIGptENnHz5g4Vg+X8iCs7OzLWuKAzxvN7AL
        T+OZfj9wf3/vjyuYMtYuyXjOA32xDx9sKeirqytP+gqSeMYA6lKXr6+vHh689fz8HJ5Mb6jL1yeMNJuB
        Udc67cRjI71uRov7ICiK8KFkUc5TC4LAU3YBQiRnkDn0nvB8cjwwwHS/Gggtger3wECvzQCW9UEoPiu4
        erAsdINa9/AIaUiITujKE7bUZXAeszxQfR9CfJ/SN1x7ams7Y7rHumNBH7COofRR10Jh76ef23gJyWF6
        DRMpaIQvnVQ38xwNzcB0Db7J/SNsMaWf+mNBH4SWG5oqEnpgAGd44Cu4gVBIbmJnCJvV7Oe4we8Hsq6h
        7nmOjYeXZhN3yVI+eHh48PUbYKFZR+ovExKAQZ88AYVuE6lgTNY0R1Ny3o7YwRzluaFuCbzIbwayOXpl
        ER8EGXbE1LLpyIBvkAdyV68hv/aT5YctIOxEQde6JWwxTZf8vg9YU9bR128m1qtDdVL35o8mhDxvxPpK
        2N0Dta7hpSXZoB3zHR9QcDc3N6enp8fHx3xyXZZsOBagogda0OrLQgTqm0UPPR9jMR42DtsjwvTydVN2
        DM3A4KXhURks4kn9MtsHSH5xcXF9ff309PTx8cEn14yYFeoqLC3SpDkFVUJn3gUsWBZuvWUYU01+qiV0
        3wxgtg+ofoT3mxFGrCuEktqxkuoWYktPt+AJYaevIYHtv/5FoVnizWZgNPPt4Nk9s33ARkAP8JsRRhj3
        m8VgIwh4QPyY2T7gTMB24DcjjDDuFdQvn5+f9vfSOehA+fzBBW0j9zCuc4jeRkuzELAl5fZG7yGzbmOr
        cEj9YHUQzy7s5JEbEhdsbXasCeoyiPB2esU6RLGC2YIQ40wcElfmN88HftMv2QdIaBWPxqhOxZsnzB8M
        liA2g3Z4wgr2hL/GbB/w92z590L3ZCsA2iM80iI247YFcBF+OTXoAYSCDxg81H0BkJzqZyNo/n7QN+YD
        +90i/48DctLeGUFUPjFEXhAurCWQk/cFC5FMiBHbJtblOz74z8EKJmo+DKIlu4Npj7rlOdGOkLnoMYFt
        E2CzLMStJayFfDCbhTRb1wrywXdI5bwM/oK9Ix/8FVY0AcgHf4J1TQDygUjIByIhH4iEfCAS8oFIyAci
        IR+IhHwgEvKBSMgHIiEfiM1ms/kHZPtyt8j1F9AAAAAASUVORK5CYII=
</value>
  </data>
</root>